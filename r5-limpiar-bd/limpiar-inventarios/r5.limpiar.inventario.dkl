#include "dkli.dkh"

#!
program
{
	#include "functions.dkh"
	// #include "funciones.dkl"
	#include "serialize.dkh"
	#include "dbr.dkh"
	@cantidad_minima=0.001 //Cantidad mínima significativa de mercancía

	

	obt_categoria_inventario::&db
	{
		return 4
	}

	LimpiarInventarioFecha::&db,f
	{
		new params
		{
			@"fecha":f
			@"categoria":obt_categoria_inventario(db)
		}

		//limpiar Movimientos
		ref query=dbr.table(db,"SELECT 
			dc.IProducto,dc.IAlmacen,
			SUM(dc.Entradas-dc.Salidas) existencia,
			SUM(dc.Cargos- dc.Abonos) saldo  
			FROM dcardex dc INNER JOIN cardex c ON c.Sys_PK=dc.FK_Cardex_Movimientos 
			WHERE c.Fecha<=@fecha and ifnull(c.aplicado,0)=1 and ifnull(c.valuado,0)=1
			GROUP BY dc.IProducto,dc.IAlmacen;",params)

		for i=0;i<@count(query)
		{
			ref fila=@item(query,i)

			params<"IProducto">:@@(fila,"IProducto")
			params<"IAlmacen">:@@(fila,"IAlmacen")
			params<"existencia">:@@(fila,"existencia")
			params<"saldo">:@@(fila,"saldo")

			
			do dbr.begin(db)

				do dbr.execute(db,"DELETE dcapa.* 
									FROM dcapa INNER JOIN dcardex ON dcardex.Sys_PK=dcapa.FK_DCardex_Capas INNER JOIN cardex ON cardex.Sys_PK=dcardex.FK_Cardex_Movimientos
									WHERE cardex.Fecha<=@fecha and ifnull(cardex.aplicado,0)=1 and ifnull(cardex.valuado,0)=1 AND dcardex.IProducto=@IProducto AND dcardex.ialmacen=@IAlmacen;",params)

				do dbr.execute(db,"UPDATE cardex,dcardex SET cardex.Sys_Info='DELETE' 
									WHERE cardex.Sys_PK=dcardex.FK_Cardex_Movimientos and 
									cardex.Fecha<=@fecha  and ifnull(cardex.aplicado,0)=1 and ifnull(cardex.valuado,0)=1 AND dcardex.IProducto=@IProducto AND dcardex.ialmacen=@IAlmacen;",params)

				do dbr.execute(db,"DELETE dcardex.* 
									FROM dcardex inner join cardex on cardex.Sys_PK=dcardex.FK_Cardex_Movimientos 
									WHERE cardex.Fecha<=@fecha  and ifnull(cardex.aplicado,0)=1 and ifnull(cardex.valuado,0)=1 AND dcardex.IProducto=@IProducto AND dcardex.ialmacen=@IAlmacen;",params)


				do dbr.execute(db,"DELETE 
									FROM cardex  
									WHERE sys_info='DELETE'",params)

				if @@(params,"existencia")>@cantidad_minima
				{
					uuid_cardex=UUID()

					using cardex
					{
						@"sys_pk":0
						@"sys_recver":0
						@"sys_timestamp*":dbr.sql("now()")
						@"sys_Guid":uuid_cardex
						@"aplicado":1
						@"descripcion":"Generado automáticamente "
						@"referencia": uuid_cardex
						@"valuado":1
						@"Fecha*": dbr.sql("date(now())")
						@"icategoria":@@(params,"categoria")
					}
					
					do dbr.insert(db,"cardex",cardex)

					pkcardex=dbr.num(db, "select sys_pk from cardex where sys_guid=@sys_guid",cardex)
					uuid_dcardex=cut(UUID(),30)
					using dcardex
					{
							@"sys_pk":0
				 		@"sys_recver":0
				 		@"sys_timestamp*":dbr.sql("now()")
				 		@"sys_Guid":UUID()
				 		@"abonos":0
				 		@"auditado":0
				 		@"cargos":@@(params,"saldo")
				 		@"contabilizado":0
				 		@"cpromedio":@@(params,"saldo")/@@(params,"existencia")
				 		@"entradas":@@(params,"existencia")
				 		@"referencia":uuid_dcardex
				 		@"resto":@@(params,"existencia")
				 		@"salidas":0
				 		@"tipocambio":1
				 		@"valuado":1
				 		@"IAlmacen":@@(params,"IAlmacen")
				 		@"IProducto":@@(params,"IProducto")
				 		@"FK_Cardex_Movimientos":pkcardex
				 	
					}

					do dbr.insert(db,"dcardex",dcardex)
				}
			do dbr.commit(db)
			exception
			{
				do print(last_error())
				do dbr.rollback(db)
			}
		}
		return "Operacion exitosa"
			
	}

	bd=field.dstr(commandline(":"),"-bd","1")
	if bd=="1"{
		do print("Hace falta su Conexion a la base de datos")
		return
	}
	ref db=dbr.open(bd)
	f=field.dstr(commandline("="),"-f","1")
	
	if f=="1"{
		do print("hace falta la fecha de corte")
		return
	}
	do print("***")
	do print(LimpiarInventarioFecha(db,f))
	do print("***")


}